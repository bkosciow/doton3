# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import connector.storage_pb2 as storage__pb2


class ProviderStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.get_storage = channel.unary_unary(
                '/Provider/get_storage',
                request_serializer=storage__pb2.Request.SerializeToString,
                response_deserializer=storage__pb2.Response.FromString,
                )
        self.get_changes = channel.unary_stream(
                '/Provider/get_changes',
                request_serializer=storage__pb2.EmptyRequest.SerializeToString,
                response_deserializer=storage__pb2.Response.FromString,
                )


class ProviderServicer(object):
    """Missing associated documentation comment in .proto file."""

    def get_storage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_changes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProviderServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'get_storage': grpc.unary_unary_rpc_method_handler(
                    servicer.get_storage,
                    request_deserializer=storage__pb2.Request.FromString,
                    response_serializer=storage__pb2.Response.SerializeToString,
            ),
            'get_changes': grpc.unary_stream_rpc_method_handler(
                    servicer.get_changes,
                    request_deserializer=storage__pb2.EmptyRequest.FromString,
                    response_serializer=storage__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Provider', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Provider(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def get_storage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Provider/get_storage',
            storage__pb2.Request.SerializeToString,
            storage__pb2.Response.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_changes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Provider/get_changes',
            storage__pb2.EmptyRequest.SerializeToString,
            storage__pb2.Response.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
